{"_id":"get-flow","_rev":"10-534bf2fb9bf1f206bba032db410d53af","name":"get-flow","description":"Flow Control Utility","dist-tags":{"latest":"0.3.0"},"versions":{"0.1.0":{"name":"get-flow","version":"0.1.0","description":"Flow Control Utility","keywords":["flow","control","task","sequence","serial","series","sync","async","retry","utility","util"],"author":{"name":"Enrico Stara","email":"enrico.stara@gmail.com"},"homepage":"https://github.com/enricostara/get-flow","repository":{"type":"git","url":"git://github.com/enricostara/get-flow.git"},"bugs":{"url":"https://github.com/enricostara/get-flow/issues"},"license":"BSD-2-Clause","dependencies":{"get-log":">=1.0.1"},"devDependencies":{"gulp":"*","gulp-jshint":"*","gulp-mocha":"*","mocha":"*","should":"*"},"main":"index","engines":{"node":"0.10.x"},"scripts":{"test":"gulp test"},"gitHead":"968d7514c7bc7a4e2894caf232f8c1ee4ed4ccd7","_id":"get-flow@0.1.0","_shasum":"be0b9e47c69533644626ffee8c58c563893837ea","_from":".","_npmVersion":"1.4.23","_npmUser":{"name":"enricostara","email":"enrico.stara@gmail.com"},"maintainers":[{"name":"enricostara","email":"enrico.stara@gmail.com"}],"dist":{"shasum":"be0b9e47c69533644626ffee8c58c563893837ea","tarball":"https://registry.npmjs.org/get-flow/-/get-flow-0.1.0.tgz"},"directories":{}},"0.1.1":{"name":"get-flow","version":"0.1.1","description":"Flow Control Utility","keywords":["flow","control","task","sequence","serial","series","sync","async","retry","utility","util"],"author":{"name":"Enrico Stara","email":"enrico.stara@gmail.com"},"homepage":"https://github.com/enricostara/get-flow","repository":{"type":"git","url":"git://github.com/enricostara/get-flow.git"},"bugs":{"url":"https://github.com/enricostara/get-flow/issues"},"license":"MIT","dependencies":{"get-log":"latest"},"devDependencies":{"gulp":"latest*","gulp-jshint":"latest","gulp-mocha":"latest","mocha":"latest","should":"latest"},"main":"./lib/get-flow","engines":{"node":"0.10.x"},"scripts":{"test":"gulp test"},"gitHead":"208973ad17a496d68d543b821d0bca9a7f980919","_id":"get-flow@0.1.1","_shasum":"8b78294d79e0be3ecf4017ad399477a063c35d1a","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"enricostara","email":"enrico.stara@gmail.com"},"maintainers":[{"name":"enricostara","email":"enrico.stara@gmail.com"}],"dist":{"shasum":"8b78294d79e0be3ecf4017ad399477a063c35d1a","tarball":"https://registry.npmjs.org/get-flow/-/get-flow-0.1.1.tgz"},"directories":{}},"0.2.0":{"name":"get-flow","version":"0.2.0","description":"Flow Control Utility","keywords":["flow","control","task","sequence","serial","series","sync","async","retry","utility","util"],"author":{"name":"Enrico Stara","email":"enrico.stara@gmail.com"},"homepage":"https://github.com/enricostara/get-flow","repository":{"type":"git","url":"git://github.com/enricostara/get-flow.git"},"bugs":{"url":"https://github.com/enricostara/get-flow/issues"},"license":"MIT","dependencies":{"get-log":"latest"},"devDependencies":{"gulp":"latest","gulp-jshint":"latest","gulp-mocha":"latest","mocha":"latest","should":"latest"},"main":"./lib/get-flow","engines":{"node":"0.10.x"},"scripts":{"test":"gulp test"},"gitHead":"69999102abdc2d825364a6abf83dbe832ba40321","_id":"get-flow@0.2.0","_shasum":"567f8a831da37336fd6579aa3d956f3b8b05e0cc","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"enricostara","email":"enrico.stara@gmail.com"},"maintainers":[{"name":"enricostara","email":"enrico.stara@gmail.com"}],"dist":{"shasum":"567f8a831da37336fd6579aa3d956f3b8b05e0cc","tarball":"https://registry.npmjs.org/get-flow/-/get-flow-0.2.0.tgz"},"directories":{}},"0.2.1":{"name":"get-flow","version":"0.2.1","description":"Flow Control Utility","keywords":["flow","control","task","sequence","serial","series","sync","async","retry","utility","util"],"author":{"name":"Enrico Stara","email":"enrico.stara@gmail.com"},"homepage":"https://github.com/enricostara/get-flow","repository":{"type":"git","url":"git://github.com/enricostara/get-flow.git"},"bugs":{"url":"https://github.com/enricostara/get-flow/issues"},"license":"MIT","dependencies":{"get-log":"latest"},"devDependencies":{"gulp":"latest","gulp-jshint":"latest","gulp-mocha":"latest","mocha":"latest","should":"latest"},"main":"./lib/get-flow","engines":{"node":">0.10.30"},"scripts":{"test":"gulp test"},"gitHead":"66676f2917b49ab1322fca5195caf5d182cd89f6","_id":"get-flow@0.2.1","_shasum":"12627f3c2c77a4e3dd89f91df8d1b85c60f09f7d","_from":".","_npmVersion":"2.5.1","_nodeVersion":"0.12.0","_npmUser":{"name":"enricostara","email":"enrico.stara@gmail.com"},"maintainers":[{"name":"enricostara","email":"enrico.stara@gmail.com"}],"dist":{"shasum":"12627f3c2c77a4e3dd89f91df8d1b85c60f09f7d","tarball":"https://registry.npmjs.org/get-flow/-/get-flow-0.2.1.tgz"},"directories":{}},"0.3.0":{"name":"get-flow","version":"0.3.0","description":"Flow Control Utility","keywords":["flow","control","task","sequence","serial","series","sync","async","retry","utility","util"],"author":{"name":"Enrico Stara","email":"enrico.stara@gmail.com"},"homepage":"https://github.com/enricostara/get-flow","repository":{"type":"git","url":"git://github.com/enricostara/get-flow.git"},"bugs":{"url":"https://github.com/enricostara/get-flow/issues"},"license":"MIT","dependencies":{"get-log":"latest"},"devDependencies":{"gulp":"latest","gulp-jshint":"latest","gulp-mocha":"latest","mocha":"latest","should":"latest"},"main":"./lib/get-flow","engines":{"node":">0.10.30"},"scripts":{"test":"gulp test"},"gitHead":"ca4afc74b1198029927facb8f4ac10f5c662d128","_id":"get-flow@0.3.0","_shasum":"440259348fce649b2ba8abe18ed90d813f7120d1","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.2","_npmUser":{"name":"enricostara","email":"enrico.stara@gmail.com"},"maintainers":[{"name":"enricostara","email":"enrico.stara@gmail.com"}],"dist":{"shasum":"440259348fce649b2ba8abe18ed90d813f7120d1","tarball":"https://registry.npmjs.org/get-flow/-/get-flow-0.3.0.tgz"},"directories":{}}},"readme":"# get-flow\n\nNode.js Flow Control Utility, powerful and easy to use \n\n## Installation\n\n```bash\n$ git clone --branch=master git://github.com/enricostara/get-flow.git\n$ cd get-flow\n$ npm install\n```\n\n## Coding\n\nFunction **_runSeries(taskList, callback, ...)_** runs an `Array of tasks`  **- and yes, you can mix synchronous \nand asynchronous tasks! -**  in `series`, calling back when done or immediately if an exception occurs.\n\n - Each task must be a **sync or async** `Function` and all the **async tasks must have the first argument named `callback`**\nin order to be recognised as asynchronous.\n\n- `Synchronous task` will be internally executed surrounded by a try/catch statement,\nany exception stops the flow and it will be passed to the main callback as first argument.\n\n- `ASynchronous task` **must manage any exception internally and propagate it to the callback as first argument**\n\n- The arguments `callback` and `tasks`  are mandatory (`callback` can be null but in place anyway),\nthe subsequent arguments (if any) **will be passed only to the first task** .\n\nSee the following example where [sync, async, sync] tasks are executed in series:\n\n```js\nvar flow = require('get-flow');\n\nfunction multiply(x, y) {\n    return x * y;\n}\n\nfunction addMillis(callback, x) {  // for ASYNC task the first argument must be the callback and be named 'callback'\n    var start = new Date().getTime();\n    setTimeout(function () {\n        var millis = new Date().getTime() - start;\n        callback(null, x + millis);\n    }, 100);\n}\n\nfunction sqrt(x) {\n    return Math.sqrt(x);\n}\n\nflow.runSeries(\n    [   // tasks series\n        multiply, // sync\n        addMillis, // async\n        sqrt  // sync again\n    ],\n    function(ex, result) {    // a proper callback when the last task (sqrt) is done\n        console.log('no exception, (ex == null) = %s ', ex == null);\n        console.log('result = %s', result);\n        var assert = require('assert');\n        assert.equal(result >= 10, true);\n    },\n    2, 3 // x and y passed at first task (multiply)\n);\n\n```\n\nFunction **_retryUntilIsDone(callback, retriesLimit, task, ...)_** calls the given `async task` until succeeds or the retries limit \nhas been reached (the **default is 10 attempts**)\n\nAll the arguments are mandatory (`callback` and `retriesLimit` can be null but in place anyway),\nthe subsequent arguments (if any) will be passed to the task.\n\nSee the following example\n\n```js\nvar flow = require('get-flow');\n\nvar i = 0;\n\nfunction task(callback, input) {\n    setTimeout(function () {\n        i++;\n        if (i === 5) {\n            callback(null, input + i);\n        } else {\n            callback('err')\n        }\n    }, 10);\n}\n\nflow.retryUntilIsDone(\n    function (ex, result) { // a proper callback\n        console.log('no exception, (ex == null) = %s ', ex == null);\n        console.log('result = %s', result);\n        var assert = require('assert');\n        assert.equal(result, 15);\n    },\n    null, // retries limit will be the default = 10\n    task, // the async task\n    10  // argument for the task\n);\n\n```\n\n## Unit Testing \n\n```bash\n$ npm test\n```\n\n## Dependencies\n\n- [get-log](https://github.com/enricostara/get-log): a Node.js Logging Utility, easy to use and ready for production.\n \n\n## License\n\nThe project is released under the [MIT license](./LICENSE) \n  ","maintainers":[{"name":"enricostara","email":"enrico.stara@gmail.com"}],"time":{"modified":"2015-04-15T17:17:58.465Z","created":"2014-10-31T11:57:25.051Z","0.1.0":"2014-10-31T11:57:25.051Z","0.1.1":"2014-12-02T10:18:19.021Z","0.2.0":"2014-12-02T10:28:45.300Z","0.2.1":"2015-03-07T15:30:21.324Z","0.3.0":"2015-04-15T17:17:58.465Z"},"homepage":"https://github.com/enricostara/get-flow","keywords":["flow","control","task","sequence","serial","series","sync","async","retry","utility","util"],"repository":{"type":"git","url":"git://github.com/enricostara/get-flow.git"},"author":{"name":"Enrico Stara","email":"enrico.stara@gmail.com"},"bugs":{"url":"https://github.com/enricostara/get-flow/issues"},"license":"MIT","readmeFilename":"README.md","users":{"enricostara":true},"_attachments":{},"_etag":"W/\"552e9d46-27c8\"","_lastModified":"Wed, 15 Apr 2015 17:17:58 GMT"}